# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-03-29 20:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='agendamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('aberto', 'Aberto'), ('em atendimento', 'Em Atendimento'), ('em espera', 'Em Espera'), ('atendido', 'Atendido'), ('cancelado', 'Cancelado')], default='Aberto', max_length=20, verbose_name='Estado do Pedido')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
            },
        ),
        migrations.CreateModel(
            name='agente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('sobrenome', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('tel', models.CharField(max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(default='eu@exemplo.com', max_length=254, verbose_name='E-mail')),
                ('endereco', models.CharField(max_length=50, verbose_name='Morada')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Agente',
            },
        ),
        migrations.CreateModel(
            name='categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_categoria', models.IntegerField(unique=True, verbose_name='C\xf3digo')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='Descri\xe7\xe3o')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Cat\xe9goria',
            },
        ),
        migrations.CreateModel(
            name='cidadao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('sobrenome', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('tel', models.CharField(max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(default='eu@exemplo.com', max_length=254, verbose_name='E-mail')),
                ('endereco', models.CharField(max_length=50, verbose_name='Morada')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
                ('utilizador', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cidad\xe3o',
            },
        ),
        migrations.CreateModel(
            name='diasuteis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('segunda-feira', 'Segunda-Feira'), ('ter\xe7a-feira', 'Ter\xe7a-Feira'), ('quarta-feira', 'Quarta-Feira'), ('quinta-feira', 'Quinta-Feira'), ('sexta-feira', 'Sexta-Feira')], max_length=20)),
                ('horainicio', models.TimeField(help_text='Hora \xcdnicial', verbose_name='Hora \xcdnicial')),
                ('horafinal', models.TimeField(help_text='Hora Final', verbose_name='Hora Final')),
            ],
            options={
                'verbose_name': 'Dias Ut\xe9is',
                'verbose_name_plural': 'Dias Ut\xe9is',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(help_text='Dia do Atendimento', verbose_name='Dia do Atendimento')),
                ('start_time', models.TimeField(help_text='Hora de \xcdnicio', verbose_name='Hora de \xcdnicio')),
                ('end_time', models.TimeField(help_text='Hora Final', verbose_name='Hora Final')),
                ('notes', models.TextField(blank=True, help_text='Coloque uma nota se for necess\xe1rio', null=True, verbose_name='Notas')),
            ],
            options={
                'verbose_name': 'Marcar Atendimento',
                'verbose_name_plural': 'Marcar Atendimento',
            },
        ),
        migrations.CreateModel(
            name='orgao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_orgao', models.IntegerField(unique=True, verbose_name='C\xf3digo')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='Descri\xe7\xe3o')),
                ('sigla', models.CharField(max_length=20, verbose_name='SIGLA')),
                ('site', models.CharField(default='www.sipa.co.ao', max_length=20, verbose_name='Site')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Org\xe3o',
            },
        ),
        migrations.CreateModel(
            name='posto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_posto', models.IntegerField(unique=True, verbose_name='C\xf3digo')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='Descri\xe7\xe3o')),
                ('nif', models.CharField(max_length=15, unique=True, verbose_name='N\xfamero de Idenfica\xe7\xe3o Fiscal')),
                ('tel', models.CharField(max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(default='info@sipa.co.ao', max_length=254, verbose_name='E-mail')),
                ('endereco', models.CharField(max_length=50, verbose_name='Endere\xe7o')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categoria', to='webapi.categoria')),
                ('diasuteis', models.ManyToManyField(to='webapi.diasuteis', verbose_name='Dias Ut\xe9is')),
                ('orgao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgao', to='webapi.orgao', verbose_name='Org\xe3o')),
            ],
            options={
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='servico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_servico', models.IntegerField(unique=True, verbose_name='C\xf3digo')),
                ('descricao', models.CharField(max_length=100, unique=True, verbose_name='Descri\xe7\xe3o')),
                ('estado', models.BooleanField(default=True, verbose_name='Activado')),
                ('data_registo', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Servi\xe7o',
            },
        ),
        migrations.AddField(
            model_name='posto',
            name='servicos',
            field=models.ManyToManyField(to='webapi.servico', verbose_name='Servi\xe7os Prestados'),
        ),
        migrations.AddField(
            model_name='diasuteis',
            name='servico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servico', to='webapi.servico'),
        ),
        migrations.AddField(
            model_name='agente',
            name='posto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posto', to='webapi.posto'),
        ),
        migrations.AddField(
            model_name='agente',
            name='utilizador',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='agenda',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='webapi.Event', verbose_name='Selecioana a Marca\xe7\xe3o'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='diasuteis',
            field=models.ManyToManyField(to='webapi.diasuteis', verbose_name='Dias Ut\xe9is'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='posto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postos', to='webapi.posto'),
        ),
        migrations.AddField(
            model_name='agendamento',
            name='utilizador',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='posto',
            unique_together=set([('orgao', 'descricao', 'categoria')]),
        ),
    ]
